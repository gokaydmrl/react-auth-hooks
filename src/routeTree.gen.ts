/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SseImport } from './routes/sse'
import { Route as SoundImport } from './routes/sound'
import { Route as LoginImport } from './routes/login'
import { Route as AuthorizeImport } from './routes/authorize'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SseRoute = SseImport.update({
  id: '/sse',
  path: '/sse',
  getParentRoute: () => rootRoute,
} as any)

const SoundRoute = SoundImport.update({
  id: '/sound',
  path: '/sound',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthorizeRoute = AuthorizeImport.update({
  id: '/authorize',
  path: '/authorize',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/authorize': {
      id: '/authorize'
      path: '/authorize'
      fullPath: '/authorize'
      preLoaderRoute: typeof AuthorizeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sound': {
      id: '/sound'
      path: '/sound'
      fullPath: '/sound'
      preLoaderRoute: typeof SoundImport
      parentRoute: typeof rootRoute
    }
    '/sse': {
      id: '/sse'
      path: '/sse'
      fullPath: '/sse'
      preLoaderRoute: typeof SseImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/authorize': typeof AuthorizeRoute
  '/login': typeof LoginRoute
  '/sound': typeof SoundRoute
  '/sse': typeof SseRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/authorize': typeof AuthorizeRoute
  '/login': typeof LoginRoute
  '/sound': typeof SoundRoute
  '/sse': typeof SseRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/authorize': typeof AuthorizeRoute
  '/login': typeof LoginRoute
  '/sound': typeof SoundRoute
  '/sse': typeof SseRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/authorize' | '/login' | '/sound' | '/sse'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/authorize' | '/login' | '/sound' | '/sse'
  id: '__root__' | '/' | '/about' | '/authorize' | '/login' | '/sound' | '/sse'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthorizeRoute: typeof AuthorizeRoute
  LoginRoute: typeof LoginRoute
  SoundRoute: typeof SoundRoute
  SseRoute: typeof SseRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthorizeRoute: AuthorizeRoute,
  LoginRoute: LoginRoute,
  SoundRoute: SoundRoute,
  SseRoute: SseRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/authorize",
        "/login",
        "/sound",
        "/sse"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/authorize": {
      "filePath": "authorize.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/sound": {
      "filePath": "sound.tsx"
    },
    "/sse": {
      "filePath": "sse.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
